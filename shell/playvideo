#!/bin/bash

[ $# -ne 1 ] && \
	echo -e "\e[1;31mUsage: $0 url\e[0m" 1>&2 && exit 1
[ -z "$(echo $1 |grep -P '^\w+://.+$')" ] && \
	echo -e "\e[1;31mUsage: $0 url\e[0m" 1>&2 && exit 1

declare -a types
declare -a fileinfo

tempfile=$(mktemp)
USERAGENT="Mozilla/5.0"
INPUTTIMEOUT=10

signal_handle()
{
	rm $tempfile
	exit $1
}
trap signal_handle SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGALRM SIGTERM

play_file()
{
	[ -z "$(echo $3 |grep -P '^\w+://.+$')" ] && return 1
	notify-send -a mplayer -i mplayer "找到${2}个文件" "正在播放：${1}"

	if [ -z "$(echo $3 |grep -P '.+\.m3u8')" ]
	then
		mplayer -user-agent "${USERAGENT}" "${3}"
	else
		mplayer -user-agent "${USERAGENT}" -playlist "${3}"
	fi
	return 0
}

use_flvcd()
{
	types=("fluent" "normal" "high" "super" "real")
	baseurl='http://www.flvcd.com/parse.php?format='
	echo -e "\e[1;34mFLVCD支持的画质：\e[0m"
	echo -e "\e[1;31m[1]\e[0m流畅版"
	echo -e "\e[1;31m[2]\e[0m标清版"
	echo -e "\e[1;31m[3]\e[0m高清版"
	echo -e "\e[1;31m[4]\e[0m超清版"
	echo -e "\e[1;31m[5]\e[0m原画版"
	echo -ne "\e[1;35m请选择合适的画质：\e[0m"
	read -t ${INPUTTIMEOUT} choice

	[ -z "$choice" ] && choice=1;
	[ -z "${types[choice-1]}" ] && choice=1;

	wget -q --user-agent="$USERAGENT" "${baseurl}${types[choice - 1]}&kw=${1}"\
		-O - |iconv -f gb2312 -o $tempfile
	[ -z "$(grep 'onclick' $tempfile)" ] && return 1

	ncount=$(grep -oP '(?<=自动切割的<font color=red>)\d*' $tempfile)
	filename=$(grep -oP '(?<=document.title = ")[^"]*(?=")' $tempfile)

	if [ -z "$ncount" ]
	then
		fileinfo=($(grep -oP '(?<=clipurl = ")[^"]*(?=")' $tempfile))
		play_file "${filename}" 1 "${fileinfo}"
		return 0
	fi

	fileinfo=( $(grep -oP '(?<=name="inf" value=").*(?=")' $tempfile \
		|sed 's=|=\n=g') )
	i=1
	for fileurl in ${fileinfo[@]}
	do
		play_file "${filename}_${i}" "${ncount}" "${fileurl}" || continue
		let "i++"
	done

	return 0
}

use_flvxz()
{
	url=$(echo $1 |sed 's=\/\/=##=g' |base64)
	baseurl='http://api.flvxz.com/url/'

	wget -q --user-agent="$USERAGENT" "${baseurl}${url}" -O $tempfile
	sed -i 's=\(<\/video>\)=\1\n=g' $tempfile

	types=( $(grep -oP \
	'(?<=<quality><\!\[CDATA\[).*(?=\]\]\>\<\/quality\>)' $tempfile) )
	[[ ${#types[@]} -eq 0 ]] && return 1

	echo -e "\e[1;34mFLVXZ找到${#types[@]}个匹配结果：\e[0m"

	i=1
	for res in ${types[@]}
	do
		echo -e "\e[1;31m[${i}]\e[0m${res}"
		let "i++"
	done
	echo -ne "\e[1;35m请选择匹配的视频：\e[0m"
	read -t ${INPUTTIMEOUT} choice

	[ -z "$choice" ] && choice=1;
	[ -z "${types[choice-1]}" ] && choice=1;

	choicetype="${types[choice-1]}"
	res=$(grep -P \
	"\<quality\>\<\!\[CDATA\[${choicetype}\]\]\>\<\/quality\>" $tempfile)
	filetitle=$(echo -e $res |grep -oP \
	"(?<=\<title\>\<\!\[CDATA\[).*(?=\]\]\>\<\/title\>)")

	types=( $(echo $res |sed -e 's=.*<files>\(.*\)<\/files>.*=\1=g' \
		-e 's=\(<\/file>\)=\n=g') )
	ncount=${#types[@]}

	i=0
	while [[ $i < $ncount ]]
	do
		let "i++"
		res=${types[i-1]}
		filetype=$(echo $res |grep -oP "(?<=\<ftype\>).*(?=\<\/ftype\>)")
		index=""
		[[ $ncount -ne 1 ]] && index=-${i}
		filename=${filetitle}${index}.${filetype}
		fileurl=$(echo $res |grep -oP \
			"(?<=\<furl\>\<\!\[CDATA\[).*(?=\]\]\>\<\/furl\>)")
		play_file "${filename}" "${ncount}" "${fileurl}"
	done
	return 0
}

use_flvxz $1 || use_flvcd $1 || \
	echo -e "\e[1;31m错误！找不到匹配结果！\e[0m" && signal_handle -1

signal_handle 0
